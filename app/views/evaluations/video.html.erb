<script src="http://static.opentok.com/v0.91/js/TB.min.js"></script>

  <!-- JQuery -->
  <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js"></script>
  
  <style>
		#chatbox {
			overflow:auto; 
		}
  </style>
  
  <script type="text/javascript">
  //360x270
    //video init
    var apiKey = '21886882';
	var sessionId = '1_MX4yMTg4Njg4Mn4xMjcuMC4wLjF-U2F0IERlYyAwMSAyMTozODo0OCBQU1QgMjAxMn4wLjAzMjQ0NjI2NX4';
    var token = 'T1==cGFydG5lcl9pZD0yMTg4Njg4MiZzaWc9NzllZDI5NTY0NDYyODBhZGMzMjEyYjcxMDQ5NmQ1YjM4YmQ2N2EwZjpzZXNzaW9uX2lkPTFfTVg0eU1UZzROamc0TW40eE1qY3VNQzR3TGpGLVUyRjBJRVJsWXlBd01TQXlNVG96T0RvME9DQlFVMVFnTWpBeE1uNHdMakF6TWpRME5qSTJOWDQmY3JlYXRlX3RpbWU9MTM1NDQyNjc0MiZleHBpcmVfdGltZT0xMzU3MDE4NzQyJnJvbGU9cHVibGlzaGVyJmNvbm5lY3Rpb25fZGF0YT0mbm9uY2U9MjQ3Mzg3';

    TB.setLogLevel(TB.DEBUG); // Set this for helpful debugging messages in console

     var session = TB.initSession(sessionId);			
     session.addEventListener('sessionConnected', sessionConnectedHandler);
     session.addEventListener('streamCreated', streamCreatedHandler);
     session.connect(apiKey, token);
	 
	 var stateManager;
	 
	 
	function chatStateChangedHandler(event) {
		if (event.changedValues["chat"] != null) {
			$('#chatbox').append(event.changedValues["chat"] + '\n');
			// $('#chatbox').scrollTop($('#chatbox')[0].scrollHeight - $('#chatbox').height());
		}
		//alert("asdasd");
	}
	
	function sessionConnectedHandler(event) {
      publisher = TB.initPublisher(apiKey, 'myPublisherDiv');
      var props = {width: 120,
					 height: 90};
					 
	  session.publish(publisher, props);

      // Subscribe to streams that were in the session when we connected
	
      subscribeToStreams(event.streams);
	  
	  stateManager = session.getStateManager();
	  
					 
	  stateManager.addEventListener("changed:chat", chatStateChangedHandler);
    }

    function streamCreatedHandler(event) {
      // Subscribe to any new streams that are created
      subscribeToStreams(event.streams);
    }

    function subscribeToStreams(streams) {
      for (var i = 0; i < streams.length; i++) {
        // Make sure we don't subscribe to ourself
        if (streams[i].connection.connectionId == session.connection.connectionId) {
          return;
        }

        // Create the div to put the subscriber element in to
        /*var div = document.createElement('div');
        div.setAttribute('id', 'stream' + streams[i].streamId);
        document.body.appendChild(div);*/

        // Subscribe to the stream
	var props = {width: 360,
					 height: 270};
					 
        session.subscribe(streams[i], "other", props);
		
      }
    }
	window.onload = function() {
	
		$('#inputText').keydown(function (event) {
			//event.preventDefault();
			var keypressed = event.keyCode || event.which;
			
			if (keypressed == 13) {
				sendMsg(13);
			}
		})
		$('#submitChat').click(sendMsg);
	}
	
	function sendMsg(event) {
			if (stateManager != undefined) {
				stateManager.set("chat", $('#inputText').val());
				$('#inputText').val('');
			}
	}
  </script>

  <div>
  	<h1 style="margin-left: -30px">Interview Room</h1>
  	<div class="container">
  		<div class="row">
	  	<%= image_tag(@post.user.profile_pic_url) %>
	  	<p class="title"><strong>Title: </strong><%= @post.title %></p>
	  	<p class="category"><strong>Name: </strong><%= @post.candidate_name %></p>
	  	<p class="description"><strong>Description: </strong><%= @post.description %></p>

	    </div>
	    <div class="row">
	    	<div id="other"></div>
	    	<div id="myPublisherDiv"></div>
	    </div>

	    <div class="row">
			<textarea id="chatbox" cols="100" rows="4"></textarea>
			<div id="inputarea"> <!-- align horizontal -->
				<input id="inputText" type="text" size="100" />
				<input id="submitChat" type="submit" value="" />
			</div>
	    </div>
	</div>
  </div>